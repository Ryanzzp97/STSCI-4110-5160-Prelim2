group_by(treat) %>%
summarize(weighted.mean(re78, weight))
print()
with_weight_sum <- with_weight %>%
group_by(treat) %>%
summarize(weighted.mean(re78, weight)) %>%
print()
knitr::opts_chunk$set(echo = TRUE)
pnorm(-13.79)
2*pnorm(-13.79)
2*pnorm(-13.79)
kick_model <- glm(good ~ distance, family = binomial, data=kick_dat)
kick_dat <- read.csv("placekick.csv")
kick_fac <- factor(cut(kick_dat$distance, breaks = c(18, seq(20,60,5), 66), labels = c("<= 20 yd", "21-25", "26-30", "31-35", "36-40", "41-45", "46-50", "51-55", "56-60", "> 60 yd")))
probs <- tapply(kick_dat$good, kick_fac, mean)
data.frame(probs)
# Take mid-point of each interval
yards <- c(18,23,28,33,38,43,48,53,58,63)
plot(yards, probs, main = "Empirical Probabilities of Success by Distance Interval", xlab = "Distance (in yards)", ylab = "Empirical Probability of Success")
kick_model <- glm(good ~ distance, family = binomial, data=kick_dat)
summary(kick_model)
-0.115027/0.008339
2*pnorm(-13.79386)
pnorm(-13.79386)
2*pnorm(-13.79386)
kick_dat <- read.csv("placekick.csv")
kick_fac <- factor(cut(kick_dat$distance, breaks = c(18, seq(20,60,5), 66),
labels = c("<= 20 yd", "21-25", "26-30", "31-35", "36-40",
"41-45", "46-50", "51-55", "56-60", "> 60 yd")))
probs <- tapply(kick_dat$good, kick_fac, mean)
data.frame(probs)
# Take mid-point of each interval
yards <- c(18,23,28,33,38,43,48,53,58,63)
plot(yards, probs, main = "Empirical Probabilities of Success by Distance Interval",
xlab = "Distance (in yards)", ylab = "Empirical Probability of Success")
pred_35_logit <- as.numeric(kick_model$coefficients[1])+
as.numeric(kick_model$coefficients[2])*35
pred_35_odds <- exp(pred_35_logit)
pred_35_pr <- (pred_35_odds)/(1+pred_35_odds)
pred_35_pr
# check work
as.numeric(predict(kick_model, newdata = data.frame(distance = 35), type = "response"))
distances <- seq(0, 80, by = 1)
pred_probs <- predict(kick_model, newdata = data.frame(distance = distances),
type = "response")
plot(distances, pred_probs, type = "l", xlab = "Distance (yards)",
ylab = "Probability of Success",
main = "Probability of a Successful Placekick vs. Distance")
cc_dat <- read.csv("cc_income.csv")
cc_dat$cc_cat <- cut(cc_dat$Inc, breaks = c(seq(45,105,10), 165),
labels = c("45-54", "55-64", "65-74", "75-84", "85-94",
"95-104", ">= 105 million lira"), right = FALSE)
library(dplyr)
grouped_dat <- cc_dat %>%
group_by(cc_cat)
cc_probs <- grouped_dat %>%
summarize(
total_cases = sum(No..Cases),
total_cc = sum(Credit.Cards),
probability = total_cc / total_cases
)
print(cc_probs)
pred_68_logit <- as.numeric(cc_fit$coefficients[1])
cc_yes <- cc_dat$Credit.Cards
not_cc <- cc_dat$No..Cases-cc_dat$Credit.Cards
cc_fit <- glm(cbind(cc_yes, not_cc) ~ cc_dat$Inc, binomial)
summary(cc_fit)
pred_68_logit <- as.numeric(cc_fit$coefficients[1])
+as.numeric(cc_fit$coefficients[2])*68
pred_68_odds <- exp(pred_68_logit)
pred_68_pr <- (pred_68_odds)/(1+pred_68_odds)
pred_68_pr
cc_dat <- read.csv("cc_income.csv")
cc_dat$cc_cat <- cut(cc_dat$Inc, breaks = c(seq(45,105,10), 165),
labels = c("45-54", "55-64", "65-74", "75-84", "85-94",
"95-104", ">= 105 million lira"), right = FALSE)
library(dplyr)
grouped_dat <- cc_dat %>%
group_by(cc_cat)
cc_probs <- grouped_dat %>%
summarize(
total_cases = sum(No..Cases),
total_cc = sum(Credit.Cards),
probability = total_cc / total_cases
)
print(cc_probs)
cc_yes <- cc_dat$Credit.Cards
not_cc <- cc_dat$No..Cases-cc_dat$Credit.Cards
cc_fit <- glm(cbind(cc_yes, not_cc) ~ cc_dat$Inc, binomial)
summary(cc_fit)
cc_full <- glm(cbind(cc_yes, not_cc) ~ 1+cc_dat$Inc, data = cc_dat, family = binomial)
cc_null <- glm(cbind(cc_yes, not_cc) ~ 1, data = cc_dat, family = binomial)
cc_lr_test <- lrtest(cc_null, cc_full)
# Check p-value
dev_diff <- cc_fit$null.deviance-cc_fit$deviance
1-pchisq(dev_diff, 1)
-0.2322/0.1082
pnorm(-2.146026)
2*pnorm(-2.146026)
2*pnorm(1.96)
2*pnorm(-1.96)
library(tidyverse)
library(MatchIt)
data("lalonde")
library(tidyverse)
library(MatchIt)
data("lalonde")
match1 <- matchit(treat ~ race+married+nodegree, data = lalonde, method = "exact")
summary(match1)
match1_dat <- match.data(match1)
lm(re78 ~ treat+race+married+nodegree, data = lalonde, weights = match1_dat$weights)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
install <- function(package) {
if (!require(package, quietly = TRUE, character.only = TRUE)) {
install.packages(package, repos = "http://cran.us.r-project.org", type = "binary")
library(package, character.only = TRUE)
}
}
install("cowplot")
install("dplyr")
install("tidyverse")
malesky2014 <- read_csv("https://github.com/causal3900/causal3900.github.io/raw/main/assets/data/malesky2014.csv")
malesky2014 <- drop_na(malesky2014, lnarea, lnpopden, city) # data cleaning
View(malesky2014)
colnames(malesky2014)
malesky2014$treatment
head(malesky2014)
# Plot the outcome for `Education and Cultural Program`
ed_and_culture <- malesky2014 %>%
mutate(treatment = ifelse(treatment == 1, "Treated in 2009","Untreated")) %>%
group_by(treatment, year) %>%
summarize(estimate = mean(pro4)) %>%
ggplot(aes(x = year, y = estimate, color = treatment)) +
geom_point() +
geom_line() +
ggtitle("Ed. and Cultural Program") +
theme_minimal() +
theme(legend.position = "none",
legend.background = element_rect(fill = "white", colour = "white"),
plot.title = element_text(hjust = 0.5))
# Plot the outcome for `Tap Water`
tap_water <- malesky2014 %>%
mutate(treatment = ifelse(treatment == 1, "Treated in 2009","Untreated")) %>%
group_by(treatment, year) %>%
summarize(estimate = mean(tapwater)) %>%
ggplot(aes(x = year, y = estimate, color = treatment)) +
geom_point() +
geom_line() +
ggtitle("Tap Water") +
theme_minimal() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5))
# Plot the outcome for `Agricultural Center`
ag_center <- malesky2014 %>%
mutate(treatment = ifelse(treatment == 1, "Treated in 2009","Untreated")) %>%
group_by(treatment, year) %>%
summarize(estimate = mean(agrext)) %>%
ggplot(aes(x = year, y = estimate, color = treatment)) +
geom_point() +
geom_line() +
ggtitle("Agricultural Center") +
theme_minimal() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5))
# Plot the outcome for `Education and Cultural Program`
ed_and_culture <- malesky2014 %>%
mutate(treatment = ifelse(treatment == 1, "Treated in 2009","Untreated")) %>%
group_by(treatment, year) %>%
summarize(estimate = mean(pro4)) %>%
ggplot(aes(x = year, y = estimate, color = treatment)) +
geom_point() +
geom_line() +
ggtitle("Ed. and Cultural Program") +
theme_minimal() +
theme(legend.position = "none",
legend.background = element_rect(fill = "white", colour = "white"),
plot.title = element_text(hjust = 0.5))
# Plot the outcome for `Tap Water`
tap_water <- malesky2014 %>%
mutate(treatment = ifelse(treatment == 1, "Treated in 2009","Untreated")) %>%
group_by(treatment, year) %>%
summarize(estimate = mean(tapwater)) %>%
ggplot(aes(x = year, y = estimate, color = treatment)) +
geom_point() +
geom_line() +
ggtitle("Tap Water") +
theme_minimal() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5))
# Plot the outcome for `Agricultural Center`
ag_center <- malesky2014 %>%
mutate(treatment = ifelse(treatment == 1, "Treated in 2009","Untreated")) %>%
group_by(treatment, year) %>%
summarize(estimate = mean(agrext)) %>%
ggplot(aes(x = year, y = estimate, color = treatment)) +
geom_point() +
geom_line() +
ggtitle("Agricultural Center") +
theme_minimal() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5))
legend <- get_legend(
ed_and_culture +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
pgrid <- cowplot::plot_grid(ed_and_culture, tap_water, ag_center, nrow = 1)
plot_grid(pgrid, legend, ncol = 1, rel_heights = c(1, .1))
# remove the extra pretreatment periods from the dataset
onePerMalesky <- malesky2014 %>%
filter(year==2008 | year ==2010)
# Now, create the interaction term between treatment and post_treat
onePerMalesky <- onePerMalesky %>%
mutate(did = ...create your interaction variable here...)
# remove the extra pretreatment periods from the dataset
onePerMalesky <- malesky2014 %>%
filter(year==2008 | year ==2010)
# Now, create the interaction term between treatment and post_treat
onePerMalesky <- onePerMalesky %>%
mutate(did = treatment*time)
# remove the extra pretreatment periods from the dataset
onePerMalesky <- malesky2014 %>%
filter(year==2008 | year ==2010)
# Now, create the interaction term between treatment and post_treat
onePerMalesky <- onePerMalesky %>%
mutate(did = treatment*post_treat)
### Code from Discussion section to get you started
library(ggplot2)
library(rddensity)
library(rdrobust)
library(rdlocrand)
data <- read.csv("https://raw.githubusercontent.com/rdpackages-replication/CIT_2020_CUP/master/CIT_2020_CUP_senate.csv")
dem_vote_t1 <- data$demvoteshfor1
dem_margin_t0 <- data$demmv
# plotting the data
# Shows average to the left and to the right of the cut-off
rdplot(
y = dem_vote_t1,
x =  dem_margin_t0,
nbins = c(1000, 1000),
p = 0,
col.lines = "red",
col.dots = "lightgray",
title = "Incumbency Advantage",
y.lim = c(0,100),
x.label = "Dem Margin of Victory",
y.label = "Dem Vote Share in next election"
)
rdrobust(dem_vote_t1, dem_margin_t0, kernel = "uniform", p=1, h=10)
result <- rdrobust(dem_vote_t1, dem_margin_t0, kernel = "uniform", p=1, h=10)
summary(result)
result <- rdrobust(dem_vote_t1, dem_margin_t0)
summary(result)
install <- function(package) {
if (!require(package, quietly = TRUE, character.only = TRUE)) {
install.packages(package, repos = "http://cran.us.r-project.org", type = "binary")
library(package, character.only = TRUE)
}
}
install("ggplot2")
install("lpdensity")
install("rddensity")
install("rdrobust")
install("rdlocrand")
data <- read.csv("https://raw.githubusercontent.com/rdpackages-replication/CIT_2020_CUP/master/CIT_2020_CUP_senate.csv")
head(data)
# presdemvoteshlag1 is democratic vote share in the previous presidential election
# demmv is the democratic margin of victory in the current senate election (i.e., democratic percentage - next closest percentage)
#   so a value just above 0 indicates a very close victory, a value just below 0 indicates a very close loss
# demovoteshlag1 and 2 indicates the vote share 1 and 2 election cycles ago
# demovoteshfor1 and 2 indicates the vote share 1 and 2 elections cycles in the future
dem_vote_t2 <- data$demvoteshfor2
dem_margin_t0 <- data$demmv
# plot the data
# Set p = 0 for a straight line (i.e., regression with X^p)
rdplot(y = dem_vote_t2, x =  dem_margin_t0, nbins = c(1000, 1000), p = 0, col.lines = "red", col.dots = "lightgray", title = "Incumbency Advantage", y.lim = c(0,100), x.label = "Dem Margin of Victory", y.label = "Dem Vote Share in next election")
rdplot(dem_vote_t2[abs(dem_margin_t0) <= 25], dem_margin_t0[abs(dem_margin_t0) <= 25], nbins = c(2500, 500), p = 4, col.lines = "red", col.dots = "lightgray", title = "",  y.lim = c(0,100))
# Set bandwidth to 10
h <- 10
# Fit regression to left and right of cut-off
lm_left <- lm(dem_vote_t2 ~ dem_margin_t0, subset = dem_margin_t0 < 0 & abs(dem_margin_t0) <= h)
lm_right <- lm(dem_vote_t2 ~ dem_margin_t0, subset = dem_margin_t0 > 0 & abs(dem_margin_t0) <= h)
# Estimate is difference in interecepts
lm_right$coefficients[1] - lm_left$coefficients[1]
h <- 10
weight <- ifelse(abs(dem_margin_t0) < h, 1 - abs(dem_margin_t0) / h, 0)
## Note we don't need subs
lm_left <- lm(dem_vote_t2 ~ dem_margin_t0, subset = dem_margin_t0 < 0 & abs(dem_margin_t0) <= h, weights = weight)
lm_right <- lm(dem_vote_t2 ~ dem_margin_t0, subset = dem_margin_t0 > 0 & abs(dem_margin_t0) <= h, weights = weight)
# Estimate is difference in interecepts
lm_right$coefficients[1] - lm_left$coefficients[1]
# uniform kernel with bandwidth 10
out <- rdrobust(dem_vote_t2, dem_margin_t0, kernel = 'uniform',  p = 1, h = 10)
summary(out)
dem_vote_t1 <- data$demvoteshfor1
dem_margin_t0 <- data$demmv
# plot the data
# Set p = 0 for a straight line (i.e., regression with X^p)
rdplot(y = dem_vote_t1, x =  dem_margin_t0, nbins = c(1000, 1000), p = 0, col.lines = "red", col.dots = "lightgray", title = "Incumbency Advantage", y.lim = c(0,100), x.label = "Dem Margin of Victory", y.label = "Dem Vote Share in next election")
setwd("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout")
knitr::opts_chunk$set(echo = TRUE)
# Load the CSV file
data <- read.csv("/Users/ryanzhou/Documents/Study/Cornell/2023/Course/STSCI 5160/Prelim/final_cardiac_data.csv")
# Load the CSV file
data <- read.csv("final_cardiac_data.csv")
setwd("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout")
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
str(data)
# Find all NA value
data[!complete.cases(data), ]
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
View(data)
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
# Find all NA value
data[!complete.cases(data), ]
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
str(data)
col(data)
data[!complete.cases(data), ]
hist(data$gender)
hist(data$age)
hist(data$ethnic1)
hist(data$educ)
hist(data$sleep.hrs)
hist(data$diabetes)
hist(data$smoker)
hist(data$bmi)
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
str(data)
# Find all NA value
data[!complete.cases(data), ]
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
str(data)
# Find all NA value
# data[!complete.cases(data), ]
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
table(data$sleep.hrs)
seq(2,16,2)
cut(data$sleep.hrs, breaks = c(seq(2,16,2)))
summary(data$sleep.hrs)
cut(data$sleep.hrs, breaks = c(seq(2,14,2)), labels = c("0-2", "3-6", "7-10", "11-14"))
cut(data$sleep.hrs, breaks = c(seq(2,14)), labels = c("0-2", "3-6", "7-10", "11-14"))
cut(data$sleep.hrs, breaks = c(2,4,6,8), labels = c("0-2", "3-6", "7-10", "11-14"))
c("0-2", "3-6", "7-10", "11-14")
cut(data$sleep.hrs, breaks = c(2,4), labels = c("0-2", "3-6", "7-10", "11-14"))
cut(data$sleep.hrs, breaks = c(0,c(2,14,2)), labels = c("0-2", "3-6", "7-10", "11-14"))
cut(data$sleep.hrs, breaks = c(0,c(2,14,2),16), labels = c("0-2", "3-6", "7-10", "11-14"))
cut(data$sleep.hrs, breaks = c(seq(2,14,2)), labels = c("0-2", "3-6", "7-10", "11-14"))
cut(data$sleep.hrs, breaks = c(seq(2,14,2)), labels = c("0-4", "5-9", "10-14"))
cut(data$sleep.hrs, breaks = c(seq(2,14,2)), labels = c("0-4", "5-9", "10-14"))
class(data$sleep.hrs)
cut(data$sleep.hrs, breaks = c(seq(0, 14, 5)), labels = c("0-4", "5-9", "10-14"))
cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-4", "5-9", "10-14"))
cut(data$sleep.hrs, breaks = c(seq(0, 14, 5)), labels = c("0-4", "5-9", "10-14"))
cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"))
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"))
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"), right = TRUE)
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "3-5", "6-8", "9-11", "12-14"))
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"), right = TRUE)
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "3-5", "6-8", "9-11", "12-14", "15-17", "18-20"), right = TRUE)
table(sleep)
table(data$sleep.hrs)
summary(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(0,4,8,12,16), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"), right = TRUE)
sleep <- cut(data$sleep.hrs, breaks = c(0,4,8,12), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"), right = TRUE)
sleep <- cut(data$sleep.hrs, breaks = c(0,4,8,14), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"), right = TRUE)
sleep <- cut(data$sleep.hrs, breaks = c(0,4,8,12,14), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"), right = TRUE)
sleep <- cut(data$sleep.hrs, breaks = c(0,4,8,12,14), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"))
c(0,c(seq(2,12)),14)
sleep <- cut(data$sleep.hrs, breaks = c(0,c(seq(2,12)),14), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"))
sleep <- cut(data$sleep.hrs, breaks = c(0,7,14), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"))
sleep <- cut(data$sleep.hrs, breaks = c(0,7), labels = c("0-2", "3-5", "6-8",
"9-11", "12-14"))
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"), right = TRUE)
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"), right = FALSE)
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"))
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "2-4", "4-6", "6-8", "8-10", "10-12", "12-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "3-5", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "3-5", "6-8", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-2", "3-5", "6-8", "9-11", "9-10", "11-12", "13-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("0-1", "2-3", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
table(data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep, data$sleep.hrs)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
data[,data$sleep.hrs]
data[data$sleep.hrs,]
data[data$sleep.hrs==na]
data[data$sleep.hrs==na,]
hist(data$sleep.hrs)
summary(data$sleep.hrs)
data[is.na(data$sleep.hrs), ]
data[is.na(data$sleep.hrs, data$bmi), ]
data[!complete.cases(data[, c('sleep.hrs', 'bmi')]), ]
data[is.na(data$sleep.hrs,), ]
data[is.na(data$sleep.hrs), ]
is.na(data)
summary(data)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE);
# data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
median_sleep_hrs
# data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
data[is.na(data$sleep.hrs), ]
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
summary(data$sleep.hrs)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
is.na(data$sleep.hrs)
median_sleep_hrs <- median(data$sleep.hrs, na.rm = TRUE)
data$sleep.hrs <- ifelse(is.na(data$sleep.hrs), median_sleep_hrs, data$sleep.hrs)
sum(is.na(data$sleep.hrs))
summary(data)
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
str(data)
# Find all NA value
# data[!complete.cases(data), ]
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
hist(data$gender)
hist(data$age)
hist(data$ethnic1)
hist(data$educ)
hist(data$sleep.hrs)
hist(data$diabetes)
hist(data$smoker)
hist(data$bmi)
sleep <- cut(data$sleep.hrs, breaks = c(seq(0, 14, 2)), labels = c("1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14"))
table(sleep)
summary(data$sleep.hrs)
sum(is.na(data$sleep.hrs))
data[is.na(data$sleep.hrs), ]
summary(data)
View(data)
# Load the CSV file
data <- read.csv("~/Documents/2023F/BTRY_4110/4110-prelim2/STSCI-4110-5160-Prelim2/Handout/final_cardiac_data.csv")
# Data Overview
head(data)
str(data)
# Find all NA value
# data[!complete.cases(data), ]
# Find column with NA
columns_with_na <- colSums(is.na(data)) > 0; columns_with_na
nrow(data)
na.omit(data)
data_omit <- na.omit(data)
nrow(data_omit)
nrow(data)-nrow(data_omit)
251/1910
